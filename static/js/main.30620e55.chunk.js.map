{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","todos","chooseUser","className","map","todo","completed","key","id","type","readOnly","checked","title","onClick","userId","CurrentUser","users","selectedUserId","clearSelectedUser","selectedUser","find","user","name","email","phone","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","App","state","filterBy","handleFilterChange","event","setState","target","value","currentUserId","a","this","filtredTodos","filter","includes","filtredUsers","length","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30620e55.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, chooseUser }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={`TodoList__item TodoList__item--${\n              todo.completed ? 'checked' : 'unchecked'}`\n            }\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                button\n              \"\n              type=\"button\"\n              onClick={() => chooseUser(todo.userId)}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ users, selectedUserId, clearSelectedUser }) => {\n  const selectedUser = users.find(user => selectedUserId === user.id);\n  // console.log(selectedUser)\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:&nbsp;\n          {selectedUserId}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n      <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n      <button\n        className=\"\n          TodoList__user-button\n          button\n        \"\n        type=\"button\"\n        onClick={() => clearSelectedUser()}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n\nCurrentUser.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string,\n      phone: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data)\n);\n\nexport const getTodos = () => request('/todos');\nexport const getUsers = () => request('/users');\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n    filterBy: '',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n\n    this.setState({\n      todos,\n      users,\n    });\n  }\n\n  handleFilterChange = (event) => {\n    this.setState({\n      filterBy: event.target.value,\n    });\n  }\n\n  chooseUser = (currentUserId) => {\n    this.setState({\n      selectedUserId: currentUserId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, users, selectedUserId, filterBy } = this.state;\n\n    const filtredTodos = todos\n      .filter(todo => todo.title)\n      .filter(todo => todo.userId)\n      .filter(todo => users.find(user => user.id === todo.userId))\n      .map(todo => ({\n        ...todo,\n        completed: !todo.completed ? false : todo.completed,\n      }))\n      .filter(todo => (filterBy ? todo.title.includes(filterBy) : true));\n\n    const filtredUsers = users\n      .map(user => ({\n        ...user,\n        name: !user.name ? 'No name' : user.name,\n        email: !user.email ? 'No email' : user.email,\n        phone: !user.phone ? 'No phone' : user.phone,\n      }));\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0\n          && (\n            <>\n              <label>\n                Filter:\n                <input\n                  name=\"filterBy\"\n                  type=\"text\"\n                  value={this.state.filterBy}\n                  onChange={this.handleFilterChange}\n                />\n              </label>\n              <TodoList\n                todos={filtredTodos}\n                chooseUser={this.chooseUser}\n              />\n            </>\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                users={filtredUsers}\n                selectedUserId={selectedUserId}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}