{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","todos","chooseUser","className","map","todo","completed","key","id","type","readOnly","checked","title","onClick","userId","CurrentUser","users","selectedUserId","selectedUser","find","user","name","email","phone","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","App","state","currentUserId","setState","a","this","filtredTodos","filter","filtredUsers","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2WAIaA,G,kBAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACtB,yBAAKC,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,kBACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEF,UAAS,yCACPE,EAAKC,UAAY,UAAY,aAE/BC,IAAKF,EAAKG,IAEV,+BACE,2BACEC,KAAK,WACLC,UAAQ,EACRC,QAASN,EAAKC,YAEhB,2BAAID,EAAKO,QAGX,4BACET,UAAU,iCAIVM,KAAK,SACLI,QAAS,kBAAMX,EAAWG,EAAKS,UANjC,YASGT,EAAKS,iBC/BPC,G,MAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAC7BC,EAAeF,EAAMG,MAAK,SAAAC,GAAI,OAAIH,IAAmBG,EAAKZ,MAEhE,OACE,yBAAKL,UAAU,eACb,wBAAIA,UAAU,sBACZ,mDAEGc,IAIL,wBAAId,UAAU,qBAAqBe,EAAaG,MAChD,uBAAGlB,UAAU,sBAAsBe,EAAaI,OAChD,uBAAGnB,UAAU,sBAAsBe,EAAaK,UChBzCC,EAAU,SAACC,EAAKC,GAAN,OACrBC,MAAM,GAAD,OAHU,kCAGV,OAAeF,GAAOC,GACxBE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAEjBN,MAAK,SAAAO,GAAM,OAAIA,EAAOC,SC2DZC,E,4MA9DbC,MAAQ,CACNrC,MAAO,GACPe,MAAO,GACPC,eAAgB,G,EAalBf,WAAa,SAACqC,GACZ,EAAKC,SAAS,CACZvB,eAAgBsB,K,8FAZpB,8BAAAE,EAAA,sEDA4BjB,EAAQ,UCApC,cACQvB,EADR,gBDC4BuB,EAAQ,UCDpC,OAEQR,EAFR,OAIE0B,KAAKF,SAAS,CACZvC,QACAe,UANJ,gD,0EAgBA,WACE,MAAyC0B,KAAKJ,MAAtCrC,EAAR,EAAQA,MAAOe,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,eAChB0B,EAAe1C,EAClB2C,QAAO,SAAAvC,GAAI,OAAIA,EAAKO,SACpBgC,QAAO,SAAAvC,GAAI,OAAIA,EAAKS,UACpBV,KAAI,SAAAC,GAAI,kCACJA,GADI,IAEPC,UAA8B,OAAnBD,EAAKC,WAA6BD,EAAKC,eAEhDuC,EAAe7B,EAClB4B,QAAO,SAAAxB,GAAI,OAAIA,EAAKC,QACpBuB,QAAO,SAAAxB,GAAI,OAAIA,EAAKZ,MAEvB,OACE,yBAAKL,UAAU,OACb,yBAAKA,UAAU,gBACZF,EAAM6C,OAAS,GAEd,kBAAC,EAAD,CACE7C,MAAO0C,EACPzC,WAAYwC,KAAKxC,cAKvB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZc,EACC,kBAAC,EAAD,CACED,MAAO6B,EACP5B,eAAgBA,IAEhB,0B,GAvDE8B,IAAMC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3c62bccb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, chooseUser }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={`TodoList__item TodoList__item--${\n              todo.completed ? 'checked' : 'unchecked'}`\n            }\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                button\n              \"\n              type=\"button\"\n              onClick={() => chooseUser(todo.userId)}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ users, selectedUserId }) => {\n  const selectedUser = users.find(user => selectedUserId === user.id);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:&nbsp;\n          {selectedUserId}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n      <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n    </div>\n  );\n};\n\nCurrentUser.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data)\n);\n\nexport const getTodos = () => request('/todos');\nexport const getUsers = () => request('/users');\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n\n    this.setState({\n      todos,\n      users,\n    });\n  }\n\n  chooseUser = (currentUserId) => {\n    this.setState({\n      selectedUserId: currentUserId,\n    });\n  }\n\n  render() {\n    const { todos, users, selectedUserId } = this.state;\n    const filtredTodos = todos\n      .filter(todo => todo.title)\n      .filter(todo => todo.userId)\n      .map(todo => ({\n        ...todo,\n        completed: todo.completed === null ? false : todo.completed,\n      }));\n    const filtredUsers = users\n      .filter(user => user.name)\n      .filter(user => user.id);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0\n          && (\n            <TodoList\n              todos={filtredTodos}\n              chooseUser={this.chooseUser}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                users={filtredUsers}\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}