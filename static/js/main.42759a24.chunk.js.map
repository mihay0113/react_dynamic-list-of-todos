{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","api.js","index.js"],"names":["TodoList","todos","className","type","checked","readOnly","map","todo","completed","key","id","title","userId","defaultProps","PropTypes","arrayOf","shape","CurrentUser","getTodos","url","fetch","options","then","response","ok","Error","status","statusText","json","result","data","App","state","selectedUserId","a","this","setState","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oYAIaA,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,yBAAKC,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,kBACZ,wBAAIA,UAAU,0CACZ,+BACE,2BAAOC,KAAK,WAAWC,SAAO,EAACC,UAAQ,IACvC,6EAGF,4BACEH,UAAU,iEAKVC,KAAK,UANP,eAWDF,EAAMK,KAAI,SAAAC,GAAI,OACb,wBACEL,UAAS,yCACPK,EAAKC,UAAY,UAAY,aAE/BC,IAAKF,EAAKG,IAEV,+BACE,2BACEP,KAAK,WACLE,UAAQ,EACRD,QAASG,EAAKC,YAEhB,2BAAID,EAAKI,QAGX,4BACET,UAAU,iCAIVC,KAAK,UALP,YAQGI,EAAKK,iBASpBZ,EAASa,aAAe,CACtBZ,MAAOa,IAAUC,QACfD,IAAUE,MAAM,CACdJ,OAAQ,EACRD,MAAO,WACPH,WAAW,M,UC9DJS,EAAc,kBACzB,yBAAKf,UAAU,eACb,wBAAIA,UAAU,sBAAqB,mDAEnC,wBAAIA,UAAU,qBAAd,gBACA,uBAAGA,UAAU,sBAAb,qBACA,uBAAGA,UAAU,sBAAb,yBCFEgB,EAAW,kBCLOC,EDKO,SCJ7BC,MAAM,GAAD,OAHU,kCAGV,OAAeD,GAAOE,GACxBC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAEjBN,MAAK,SAAAO,GAAM,OAAIA,EAAOC,QATJ,IAACX,EAAKE,GDyCdU,E,4MAjCbC,MAAQ,CACN/B,MAAO,GACPgC,eAAgB,G,8FAGlB,4BAAAC,EAAA,sEACsBhB,IADtB,OACQjB,EADR,OAGEkC,KAAKC,SAAS,CAAEnC,UAHlB,gD,0EAMA,WACE,MAAkCkC,KAAKH,MAA/B/B,EAAR,EAAQA,MAAOgC,EAAf,EAAeA,eAGf,OACE,yBAAK/B,UAAU,OACb,yBAAKA,UAAU,gBACZD,EAAMoC,OAAS,GAAK,kBAAC,EAAD,CAAUpC,MAAOA,KAGxC,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZ+B,EACC,kBAAC,EAAD,CAAarB,OAAQqB,IACnB,0B,GA1BEK,IAAMC,WELxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.42759a24.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        <li className=\"TodoList__item TodoList__item--checked\">\n          <label>\n            <input type=\"checkbox\" checked readOnly />\n            <p>distinctio vitae autem nihil ut molestias quo</p>\n          </label>\n\n          <button\n            className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n            type=\"button\"\n          >\n            User&nbsp;#2\n          </button>\n        </li>\n        {todos.map(todo => (\n          <li\n            className={`TodoList__item TodoList__item--${\n              todo.completed ? 'checked' : 'unchecked'}`\n            }\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                button\n              \"\n              type=\"button\"\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.defaultProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: 0,\n      title: 'No title',\n      completed: false,\n    }),\n  ),\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ),\n};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = () => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\"><span>Selected user: 2</span></h2>\n\n    <h3 className=\"CurrentUser__name\">Ervin Howell</h3>\n    <p className=\"CurrentUser__email\">Shanna@melissa.tv</p>\n    <p className=\"CurrentUser__phone\">010-692-6593 x09125</p>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api';\n\nconst getTodos = () => request('/todos');\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    // console.log(todos)\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && <TodoList todos={todos} />}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data)\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}